// This file generated for packaging, do not edit.
// To edit, see original source:
// /workspaces/farmng_hackathon/farm-ng-amiga/protos/farm_ng/oak/oak.proto.
//
// Copyright (c) farm-ng, inc.
//
// Licensed under the Amiga Development Kit License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://github.com/farm-ng/amiga-dev-kit/blob/main/LICENSE
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "farm_ng/core/linalg.proto";

package farm_ng.oak.proto;

message CameraSettings {
  bool auto_exposure = 1;
  uint32 exposure_time = 2;
  uint32 iso_value = 3;
  uint32 lens_pos = 4;
}

message OakImageMeta {
  int64 category = 1;          // DepthAI catetory
  int64 instance_num = 2;      // DepthAI instance number
  int64 sequence_num = 3;      // for synchronization between left, right and stereo
  double timestamp = 4;        // seconds, capture time (begin of exposure) synchronized with host monotonic
  double timestamp_device = 5; // seconds, capture time (begin of exposure) in the device monotonic clock
  double timestamp_recv = 7;   // seconds, host receive time in host monotonic clock
  CameraSettings settings = 6;
}

message OakFrame {
  OakImageMeta meta = 1;
  bytes image_data = 2; // decode/encode with cv2.imencode/cv2.imdecode
}

message OakGyro {
  farm_ng.core.proto.Vec3F32 gyro = 1;
  int32 sequence_num = 2;
  string accuracy = 3;
  double timestamp = 4;        // See OakImageMeta
  double timestamp_device = 5; // See OakImageMeta
  double timestamp_recv = 6;   // See OakImageMeta
}

message OakAccelero {
  farm_ng.core.proto.Vec3F32 accelero = 1;
  int32 sequence_num = 2;
  string accuracy = 3;
  double timestamp = 4;        // See OakImageMeta
  double timestamp_device = 5; // See OakImageMeta
  double timestamp_recv = 6;   // See OakImageMeta
}

message OakImuPacket {
  OakGyro gyro_packet = 1;
  OakAccelero accelero_packet = 2;
}

message OakImuPackets {
  repeated OakImuPacket packets = 1;
}

message OakDeviceInfo {
  string name = 1;
  string mxid = 2;
  string ip = 3;
}

message OakSyncFrame {
  OakFrame left = 1;
  OakFrame right = 2;
  OakFrame rgb = 3;
  OakFrame disparity = 4;
  OakNNData nn = 5;
  OakImuPackets imu_packets = 6;
  int64 sequence_num = 7;
  OakDeviceInfo device_info = 8;
}

message OakNNData {
  OakImageMeta meta = 1;
  uint32 num_channels = 2;
  uint32 height = 3;
  uint32 width = 4;
  bytes data = 5;
}

message Pair {
  string key = 1;
  string value = 2;
}

message Metadata {
  repeated Pair pairs = 1;
}

message OakDataSample {
  OakSyncFrame frame = 1;
  Metadata metadata = 2;
}

message RotationMatrix {
  repeated double rotation_matrix = 1;
}

message Extrinsics {
  repeated double rotation_matrix = 1;
  farm_ng.core.proto.Vec3F32 spec_translation = 2;
  int32 to_camera_socket = 3;
  farm_ng.core.proto.Vec3F32 translation = 4;
}

message CameraData {
  uint32 camera_number = 1;
  int32 camera_type = 2;
  repeated double distortion_coeff = 3;
  Extrinsics extrinsics = 4;
  uint32 height = 5;
  repeated double intrinsic_matrix = 6;
  uint32 lens_position = 7;
  double spec_hfov_deg = 8;
  uint32 width = 9;
}

message StereoRectificationData {
  uint32 left_camera_socket = 1;
  repeated double rectified_rotation_left = 2;
  repeated double rectified_rotation_right = 3;
  uint32 right_camera_socket = 4;
}

message OakCalibration {
  string batch_name = 1;
  int32 batch_time = 2;
  string board_conf = 3;
  string board_custom = 4;
  string board_name = 5;
  int32 board_options = 6;
  string board_rev = 7;
  repeated CameraData camera_data = 8;
  string hardware_conf = 9;
  Extrinsics imu_extrinsics = 10;
  repeated string miscellaneous_data = 11;
  string product_name = 12;
  StereoRectificationData stereo_rectification_data = 13;
  uint32 version = 14;
}
